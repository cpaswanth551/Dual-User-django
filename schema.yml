openapi: 3.0.3
info:
  title: MEBWB
  version: 0.0.0
  description: MEBWB..
paths:
  /api/v1/accounts/auth/register/:
    post:
      operationId: v1_accounts_auth_register_create
      description: API Endpont manages authentication actions, including user login
        and token refresh.
      tags:
      - Users-Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterationSeriailizer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegisterationSeriailizer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegisterationSeriailizer'
        required: true
      security:
      - JWTAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/accounts/auth/token/:
    post:
      operationId: v1_accounts_auth_token_create
      description: Authenticates a user and provides access and refresh tokens upon
        success.
      tags:
      - Users-Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - JWTAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/accounts/user-password/forget/:
    post:
      operationId: v1_accounts_user_password_forget_create
      tags:
      - Users-Password
      security:
      - JWTAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/accounts/user-password/reset/:
    post:
      operationId: v1_accounts_user_password_reset_create
      tags:
      - Users-Password
      security:
      - JWTAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/accounts/users/:
    get:
      operationId: v1_accounts_users_list
      description: API endpoint that allows **WebUser** instances to be viewed, created,
        updated, or deleted.
      tags:
      - Users
      security:
      - JWTAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserSerializers'
          description: ''
    post:
      operationId: v1_accounts_users_create
      description: API endpoint that allows **WebUser** instances to be viewed, created,
        updated, or deleted.
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSerializers'
        required: true
      security:
      - JWTAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSerializers'
          description: ''
  /api/v1/accounts/users/{id}/:
    get:
      operationId: v1_accounts_users_retrieve
      description: API endpoint that allows **WebUser** instances to be viewed, created,
        updated, or deleted.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Web User.
        required: true
      tags:
      - Users
      security:
      - JWTAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSerializers'
          description: ''
    put:
      operationId: v1_accounts_users_update
      description: API endpoint that allows **WebUser** instances to be viewed, created,
        updated, or deleted.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Web User.
        required: true
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSerializers'
        required: true
      security:
      - JWTAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSerializers'
          description: ''
    patch:
      operationId: v1_accounts_users_partial_update
      description: API endpoint that allows **WebUser** instances to be viewed, created,
        updated, or deleted.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Web User.
        required: true
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserSerializers'
      security:
      - JWTAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSerializers'
          description: ''
    delete:
      operationId: v1_accounts_users_destroy
      description: API endpoint that allows **WebUser** instances to be viewed, created,
        updated, or deleted.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Web User.
        required: true
      tags:
      - Users
      security:
      - JWTAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/admin/admin-password/forget/:
    post:
      operationId: v1_admin_admin_password_forget_create
      tags:
      - Admin-Password
      security:
      - JWTAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/admin/admin-password/reset/:
    post:
      operationId: v1_admin_admin_password_reset_create
      tags:
      - Admin-Password
      security:
      - JWTAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/admin/admin-user/:
    get:
      operationId: v1_admin_admin_user_list
      tags:
      - Admin-User
      security:
      - JWTAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminUser'
          description: ''
    post:
      operationId: v1_admin_admin_user_create
      tags:
      - Admin-User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminUser'
        required: true
      security:
      - JWTAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ''
  /api/v1/admin/admin-user/{id}/:
    get:
      operationId: v1_admin_admin_user_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Admin User.
        required: true
      tags:
      - Admin-User
      security:
      - JWTAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ''
    put:
      operationId: v1_admin_admin_user_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Admin User.
        required: true
      tags:
      - Admin-User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminUser'
        required: true
      security:
      - JWTAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ''
    patch:
      operationId: v1_admin_admin_user_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Admin User.
        required: true
      tags:
      - Admin-User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdminUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdminUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdminUser'
      security:
      - JWTAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ''
    delete:
      operationId: v1_admin_admin_user_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Admin User.
        required: true
      tags:
      - Admin-User
      security:
      - JWTAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/admin/auth/{id}/approve_admin/:
    post:
      operationId: v1_admin_auth_approve_admin_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Admin-Authentication
      security:
      - JWTAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/admin/auth/register/:
    post:
      operationId: v1_admin_auth_register_create
      tags:
      - Admin-Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUserRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminUserRegistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminUserRegistration'
        required: true
      security:
      - JWTAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/admin/auth/token/:
    post:
      operationId: v1_admin_auth_token_create
      description: Authenticates a user and provides access and refresh tokens upon
        success.
      tags:
      - Admin-Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - JWTAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/admin/role/:
    get:
      operationId: v1_admin_role_list
      tags:
      - role
      security:
      - JWTAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminRole'
          description: ''
    post:
      operationId: v1_admin_role_create
      tags:
      - role
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminRole'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminRole'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminRole'
        required: true
      security:
      - JWTAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminRole'
          description: ''
  /api/v1/admin/role-haspermissions/:
    get:
      operationId: v1_admin_role_haspermissions_list
      tags:
      - RolehasPermission
      security:
      - JWTAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RolehasPermissionerializer'
          description: ''
    post:
      operationId: v1_admin_role_haspermissions_create
      tags:
      - RolehasPermission
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolehasPermissionerializer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RolehasPermissionerializer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RolehasPermissionerializer'
        required: true
      security:
      - JWTAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolehasPermissionerializer'
          description: ''
  /api/v1/admin/role-haspermissions/{id}/:
    get:
      operationId: v1_admin_role_haspermissions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role has permission.
        required: true
      tags:
      - RolehasPermission
      security:
      - JWTAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolehasPermissionerializer'
          description: ''
    put:
      operationId: v1_admin_role_haspermissions_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role has permission.
        required: true
      tags:
      - RolehasPermission
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolehasPermissionerializer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RolehasPermissionerializer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RolehasPermissionerializer'
        required: true
      security:
      - JWTAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolehasPermissionerializer'
          description: ''
    patch:
      operationId: v1_admin_role_haspermissions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role has permission.
        required: true
      tags:
      - RolehasPermission
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRolehasPermissionerializer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRolehasPermissionerializer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRolehasPermissionerializer'
      security:
      - JWTAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolehasPermissionerializer'
          description: ''
    delete:
      operationId: v1_admin_role_haspermissions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role has permission.
        required: true
      tags:
      - RolehasPermission
      security:
      - JWTAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/admin/role/{id}/:
    get:
      operationId: v1_admin_role_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role.
        required: true
      tags:
      - role
      security:
      - JWTAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminRole'
          description: ''
    put:
      operationId: v1_admin_role_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role.
        required: true
      tags:
      - role
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminRole'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminRole'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminRole'
        required: true
      security:
      - JWTAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminRole'
          description: ''
    patch:
      operationId: v1_admin_role_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role.
        required: true
      tags:
      - role
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdminRole'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdminRole'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdminRole'
      security:
      - JWTAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminRole'
          description: ''
    delete:
      operationId: v1_admin_role_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role.
        required: true
      tags:
      - role
      security:
      - JWTAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/admin/web-user/:
    get:
      operationId: v1_admin_web_user_list
      tags:
      - Admin
      security:
      - JWTAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserSerializers'
          description: ''
    post:
      operationId: v1_admin_web_user_create
      tags:
      - Admin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSerializers'
        required: true
      security:
      - JWTAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSerializers'
          description: ''
  /api/v1/admin/web-user/{id}/:
    get:
      operationId: v1_admin_web_user_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Web User.
        required: true
      tags:
      - Admin
      security:
      - JWTAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSerializers'
          description: ''
    put:
      operationId: v1_admin_web_user_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Web User.
        required: true
      tags:
      - Admin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSerializers'
        required: true
      security:
      - JWTAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSerializers'
          description: ''
    patch:
      operationId: v1_admin_web_user_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Web User.
        required: true
      tags:
      - Admin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserSerializers'
      security:
      - JWTAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSerializers'
          description: ''
    delete:
      operationId: v1_admin_web_user_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Web User.
        required: true
      tags:
      - Admin
      security:
      - JWTAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    AdminRole:
      type: object
      properties:
        name:
          type: string
          maxLength: 250
      required:
      - name
    AdminUser:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        admin_role:
          allOf:
          - $ref: '#/components/schemas/RoleDisplay'
          readOnly: true
        password:
          type: string
          maxLength: 128
      required:
      - admin_role
      - password
      - username
    AdminUserRegistration:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          writeOnly: true
        confirm_password:
          type: string
          writeOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - confirm_password
      - email
      - first_name
      - last_name
      - password
      - username
    Login:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    PatchedAdminRole:
      type: object
      properties:
        name:
          type: string
          maxLength: 250
    PatchedAdminUser:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        admin_role:
          allOf:
          - $ref: '#/components/schemas/RoleDisplay'
          readOnly: true
        password:
          type: string
          maxLength: 128
    PatchedRolehasPermissionerializer:
      type: object
      properties:
        permissions:
          type: array
          items:
            type: integer
        role:
          $ref: '#/components/schemas/AdminRole'
    PatchedUserSerializers:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        user_type:
          $ref: '#/components/schemas/UserTypeEnum'
    RegisterationSeriailizer:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        user_type:
          $ref: '#/components/schemas/UserTypeEnum'
        password:
          type: string
          writeOnly: true
        confirm_password:
          type: string
          writeOnly: true
      required:
      - confirm_password
      - email
      - password
      - username
    RoleDisplay:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 250
      required:
      - id
      - name
    RolehasPermissionerializer:
      type: object
      properties:
        permissions:
          type: array
          items:
            type: integer
        role:
          $ref: '#/components/schemas/AdminRole'
      required:
      - permissions
      - role
    UserSerializers:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        user_type:
          $ref: '#/components/schemas/UserTypeEnum'
      required:
      - email
      - username
    UserTypeEnum:
      enum:
      - supervisor
      - undersigned
      - peer
      type: string
      description: |-
        * `supervisor` - Supervisor
        * `undersigned` - Undersigned
        * `peer` - Peer
  securitySchemes:
    JWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
